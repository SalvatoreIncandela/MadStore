<?xml version="1.0" encoding="UTF-8"?>

<!--
    LICENSE AGREEMENT
    
    GRIDGAIN - OPEN CLOUD PLATFORM.
    COPYRIGHT (C) 2005-2008 GRIDGAIN SYSTEMS. ALL RIGHTS RESERVED.
    
    THIS IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR
    MODIFY IT UNDER THE TERMS OF THE GNU LESSER GENERAL PUBLIC
    LICENSE AS PUBLISHED BY THE FREE SOFTWARE FOUNDATION; EITHER
    VERSION 2.1 OF THE LICENSE, OR (AT YOUR OPTION) ANY LATER 
    VERSION.
    
    THIS LIBRARY IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
    BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
    MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE 
    GNU LESSER GENERAL PUBLIC LICENSE FOR MORE DETAILS.
    
    YOU SHOULD HAVE RECEIVED A COPY OF THE GNU LESSER GENERAL PUBLIC
    LICENSE ALONG WITH THIS LIBRARY; IF NOT, WRITE TO THE FREE 
    SOFTWARE FOUNDATION, INC., 51 FRANKLIN ST, FIFTH FLOOR, BOSTON, MA  
    02110-1301 USA
-->


<!--
    Command line (default) grid configuration.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
    <description>Main Spring file for grid configuration.</description>

    <!--
        Grid default configuration.

        All configuration properties are commented. Uncomment any property to
        provide a non-default value for it.
    -->
    <bean id="grid.cfg" class="org.gridgain.grid.GridConfigurationAdapter" scope="singleton">
        <!--
            Uncomment to specify non-default grid instance name.
            By default, grid name will be null.
        -->
        <!--
        <property name="gridName" value="mygrid"/>
        -->

        <!--
            Uncomment the following section if you wish to add local node benchmark
            to user attributes. You can also add any other node attribute specific
            to your application. Attributes for this node will be available from any
            other node in the grid.

            Attributes can be used for segmenting grid nodes into groups. See
            Wiki documentation for more information about node segmentation.

            Grid local node benchmark is a good example of a complex attribute that
            can be added to the node at startup.

            Note that you will have to use 'grid.node.benchmark' grid node attribute name
            to get the benchmark for the given node.

            Note that all System Properties and Environment Variables are set as node
            attributes automatically by GridGain.
        -->
        <!--
        <property name="userAttributes">
            <map>
                <entry key="grid.node.benchmark">
                    <bean class="org.gridgain.grid.benchmarks.GridLocalNodeBenchmark" init-method="start"/>
                </entry>
            </map>
        </property>
        -->

        <!--
            Uncomment to disable peer class loading.
        -->
        <!--
        <property name="peerClassLoadingEnabled" value="false"/>
        -->

        <!--
            Uncomment to change defaults for node metrics updates.
            By default, metricsExpireTime is 600,000 (10 minutes)
            and metricsHistorySize is 10,000.
        -->
        <!--
        <property name="metricsExpireTime" value="300000"/>
        <property name="metricsHistorySize" value="20000"/>
        -->

        <!--
            Uncomment to explicitely specify which packages should
            be loaded from peer nodes even if they are present in
            local classpath.
        -->
        <!--
        <property name="p2PLocalClassPathExclude">
            <list>
                <value>org.springframework.*</value>
                <value>org.openspaces.*</value>
                <value>org.hibernate.*</value>
            </list>
        </property>
        -->

        <!--
            Deployment mode for this node.

            Allowed values are PRIVATE, ISOLATED, SHARED, CONTINUOUS (default is ISOLATED).
        -->
        <!--
        <property name="deploymentMode" value="SHARED"/>
        -->

        <!--
            Size of cache for missed resources. If value is greater than 0,
            then attemps for resources that could not be loaded are cached,
            and consequent requests for this resources will not be made.
            If value is 0, then request for all resrouces will be made
            every time.
        -->
        <!--
        <property name="peerClassLoadingMissedResourcesCacheSize" value="100"/>
        -->

        <!--
            Timeout for peer class loading requests in milliseconds.
        -->
        <!--
        <property name="peerClassLoadingTimeout" value="5000"/>
        -->

        <!--
            Logger to use. By default 'config/default-log4j.xml' logger file will
            be used. If such file is not found, then default GridGain configuration
            for logging will be used.
        -->
        <!--
        <property name="gridLogger">
            <bean class="org.gridgain.grid.logger.log4j.GridLog4jLogger">
                <constructor-arg type="java.lang.String" value="config/default-log4j.xml"/>
            </bean>
        </property>
        -->

        <!--
            Logger to use. This is an example of JCL logger configuration wrapped around log4j one.
            We use default log4j configuration file here.
        -->
        <!--
        <property name="gridLogger">
            <bean class="org.gridgain.grid.logger.jcl.GridJclLogger">
                <constructor-arg type="org.apache.commons.logging.Log">
                    <bean class="org.apache.commons.logging.impl.Log4JLogger">
                        <constructor-arg type="java.lang.String" value="config/default-log4j.xml"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        -->

        <!--
            Logger to use. This is an example of using Java logging with default "global" logger.
        -->
        <!--
        <property name="gridLogger">
            <bean class="org.gridgain.grid.logger.java.GridJavaLogger">
                <constructor-arg type="java.util.logging.Logger">
                    <bean class="java.util.logging.Logger">
                        <constructor-arg type="java.lang.String" value="global"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        -->

        <!--
            Marshaller implementation based on JBoss Serialization. This is default marshaller
            used by GridGain and does not have to be uncommented.
        -->
        <!--
        <property name="marshaller">
            <bean class="org.gridgain.grid.marshaller.jboss.GridJBossMarshaller"/>
        </property>
        -->

        <!--
            Marshaller implementation based on java.io.ObjectStreamd provided by JDK.
            Uncomment if need to use standard JDK serialization.
        -->
        <!--
        <property name="marshaller">
            <bean class="org.gridgain.grid.marshaller.jdk.GridJdkMarshaller"/>
        </property>
        -->

        <!--
            Marshaller implementation based on CodeHaus XStream XML serialzation.
            Use it when working with data that does not implement java.io.Serializable.
        -->
        <!--
        <property name="marshaller">
            <bean class="org.gridgain.grid.marshaller.xstream.GridXstreamMarshaller"/>
        </property>
        -->

        <!--
            Ordered collection of lifecycle beans. Lifecycle beans will be notified
            about grid events in the same order as specified.

            Use lifecycle beans to add custom logic before or after grid startip and
            stopping routines.
        -->
        <!--
        <property name="lifecycleBeans">
            <list>
                <bean class="foo.bar.FooBarLifecycleBean1"/>
                <bean class="foo.bar.FooBarLifecycleBean2"/>
            </list>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for executor service.
            By default thread pool size is 100.
            All threads are prestarted and are available for use.
        -->
        <!--
        <property name="executorService">
            <bean class="java.util.concurrent.ThreadPoolExecutor">
                <constructor-arg type="int" value="200"/>
                <constructor-arg type="int" value="200"/>
                <constructor-arg type="long">
                    <util:constant static-field="java.lang.Long.MAX_VALUE"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.TimeUnit">
                    <util:constant static-field="java.util.concurrent.TimeUnit.SECONDS"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.BlockingQueue">
                    <bean class="java.util.concurrent.LinkedBlockingQueue"/>
                </constructor-arg>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for System executor service.
            By default the thread pool size is 5 which should be good enough.
            Threads are not started unless used.
        -->
        <!--
        <property name="systemExecutorService">
            <bean class="java.util.concurrent.ThreadPoolExecutor">
                <constructor-arg type="int" value="5"/>
                <constructor-arg type="int" value="10"/>
                <constructor-arg type="long">
                    <util:constant static-field="java.lang.Long.MAX_VALUE"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.TimeUnit">
                    <util:constant static-field="java.util.concurrent.TimeUnit.SECONDS"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.BlockingQueue">
                    <bean class="java.util.concurrent.LinkedBlockingQueue"/>
                </constructor-arg>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for P2P executor service.
            By default the thread pool size is 20 which should be good enough.
            Threads are not started unless used.
        -->
        <!--
        <property name="p2PExecutorService">
            <bean class="java.util.concurrent.ThreadPoolExecutor">
                <constructor-arg type="int" value="20"/>
                <constructor-arg type="int" value="25"/>
                <constructor-arg type="long">
                    <util:constant static-field="java.lang.Long.MAX_VALUE"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.TimeUnit">
                    <util:constant static-field="java.util.concurrent.TimeUnit.SECONDS"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.BlockingQueue">
                    <bean class="java.util.concurrent.LinkedBlockingQueue"/>
                </constructor-arg>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for RoundRobin Load Balancing SPI.
            Note that RoundRobin Load Balancing SPI with 'perTask' set to 'true' is used be
            default, so uncomment it if you need to change default parameter configuration.
        -->
        <!--
        <property name="loadBalancingSpi">
            <bean class="org.gridgain.grid.spi.loadbalancing.roundrobin.GridRoundRobinLoadBalancingSpi">
                <property name="perTask" value="false"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for Weighted Random Load Balancing SPI.
        -->
        <!--
        <property name="loadBalancingSpi">
            <bean class="org.gridgain.grid.spi.loadbalancing.weightedrandom.GridWeightedRandomLoadBalancingSpi">
                <property name="useWeights" value="true"/>
                <property name="nodeWeight" value="10"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for Adaptive Load Balancing SPI.
            Note that we use GridAdaptiveProcessingTimeLoadProbe, but you are free to
            provide your own node load probing to use.
        -->
        <!--
        <property name="loadBalancingSpi">
            <bean class="org.gridgain.grid.spi.loadbalancing.adaptive.GridAdaptiveLoadBalancingSpi">
                <property name="loadProbe">
                    <bean class="org.gridgain.grid.spi.loadbalancing.adaptive.GridAdaptiveProcessingTimeLoadProbe">
                        <constructor-arg value="true"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for Affinity Load Balancing SPI.
        -->
        <!--
        <property name="loadBalancingSpi">
            <bean class="org.gridgain.grid.spi.loadbalancing.affinity.GridAffinityLoadBalancingSpi">
                <property name="virtualNodeCount" value="1000"/>
                <property name="affinityNodeAttributes">
                    <map>
                        <entry key="node.segment" value="foobar"/>
                    </map>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for Coherence Affinity Load Balancing SPI.
        -->
        <!--
        <property name="loadBalancingSpi">
            <bean class="org.gridgain.grid.spi.loadbalancing.coherence.GridCoherenceLoadBalancingSpi"/>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for Shared File System Checkpoint SPI.
            Note that Shared File System Checkpoint SPI is used be default, so there is no need
            to uncomment this section if you don't filter to change any default
            configuration properties.
        -->
        <!--
        <property name="checkpointSpi">
            <bean class="org.gridgain.grid.spi.checkpoint.sharedfs.GridSharedFsCheckpointSpi">
                <property name="directoryPath" value="/work/checkpoint/sharedfs"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide configuration for Database Checkpoint SPI.

            Note that all properties other than 'datasource' are optional.
        -->
        <!--
        <property name="checkpointSpi">
            <bean class="org.gridgain.grid.spi.checkpoint.database.GridDatabaseCheckpointSpi">
                <property name="dataSource" ref="anyPoolledDataSourceBean"/>

                <property name="checkpointTableName" value="CHECKPOINTS"/>
                <property name="numberOfRetries" value="2"/>
                <property name="keyFieldName" value="NAME"/>
                <property name="keyFieldType" value="VARCHAR(256)"/>
                <property name="valueFieldName" value="VALUE"/>
                <property name="valueFieldType" value="BLOB"/>
                <property name="expireDateFieldName" value="EXPIRE_DATE"/>
                <property name="expireDateFieldType" value="DATETIME"/>

                <property name="user" value="test"/>
                <property name="password" value="test"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for GigaSpaces Checkpoint SPI.
        -->
        <!--
        <property name="checkpointSpi">
            <bean class="org.gridgain.grid.spi.checkpoint.gigaspaces.GridGigaSpacesCheckpointSpi">
                <property name="spaceUrl" value="/./mySpaceMap" />
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide non-default configuration for Tangosol Coherence Checkpoint SPI.
        -->
        <!--
        <property name="checkpointSpi">
            <bean class="org.gridgain.grid.spi.checkpoint.coherence.GridCoherenceCheckpointSpi">
                <property name="cacheName" value="gridgain.checkpoint.cache" />
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide configuration for Job Stealing Collision SPI.

            Make sure to set parallel jobs number to appropriate value, usually equal
            to the number of threads in the execution pool (default is 100).
        -->
        <!--
        <property name="collisionSpi">
            <bean class="org.gridgain.grid.spi.collision.jobstealing.GridJobStealingCollisionSpi">
                <property name="activeJobsThreshold" value="100"/>
                <property name="waitJobsThreshold" value="0"/>
                <property name="maximumStealingAttempts" value="10"/>
                <property name="stealingEnabled" value="true"/>
                <property name="messageExpireTime" value="1000"/>
                <property name="stealingAttributes">
                    <map>
                        <entry key="node.segment" value="foobar"/>
                    </map>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide configuration for Priority Queue Collision SPI.

            Make sure to set parallel jobs number to appropriate value, usually equal
            to the number of threads in the execution pool (default is 100).
        -->
        <!--
        <property name="collisionSpi">
            <bean class="org.gridgain.grid.spi.collision.priorityqueue.GridPriorityQueueCollisionSpi">
                <property name="parallelJobsNumber" value="100"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to use FIFO Collision SPI and provide configuration for it.
            Note that FIFO Collision SPI is used be default, so there is no need
            to uncomment this section if you don't plan to change any default
            configuration properties.

            Make sure to set parallel jobs number to appropriate value, usually equal
            to the number of threads in the execution pool (default is 100).
        -->
        <!--
        <property name="collisionSpi">
            <bean class="org.gridgain.grid.spi.collision.fifoqueue.GridFifoQueueCollisionSpi">
                <property name="parallelJobsNumber" value="1"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for TCP communication SPI.
            Note that TCP communication SPI is used be default, so there is no need
            to uncomment this section if you don't plan to change any default
            configuration properties.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.tcp.GridTcpCommunicationSpi">
                <property name="directBuffer" value="false"/>
                <property name="localAddress" value="1.2.3.4"/>
                <property name="localPort" value="47100"/>
                <property name="localPortRange" value="100"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for multicast based JGroups communication SPI.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.jgroups.GridJgroupsCommunicationSpi">
                <property name="configurationFile" value="config/jgroups/multicast/jgroups.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for TCP based JGroups communication SPI.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.jgroups.GridJgroupsCommunicationSpi">
                <property name="configurationFile" value="config/jgroups/tcp/jgroups.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for JMS communication SPI.

            NOTE: JARs for specific JMS provider should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.jms.GridJmsCommunicationSpi">
                <property name="connectionFactoryName" value="java:ConnectionFactory"/>
                <property name="topicName" value="topic/myjmstopic"/>
                <property name="jndiEnvironment">
                    <map>
                        <entry>
                            <key><util:constant static-field="javax.naming.Context.INITIAL_CONTEXT_FACTORY"/></key>
                            <value>org.jnp.interfaces.NamingContextFactory</value>
                        </entry>
                        <entry>
                            <key><util:constant static-field="javax.naming.Context.PROVIDER_URL"/></key>
                            <value>jnp://my.ip.address:1099</value>
                        </entry>
                        <entry>
                            <key><util:constant static-field="javax.naming.Context.URL_PKG_PREFIXES"/></key>
                            <value>org.jboss.naming:org.jnp.interfaces</value>
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for Mail communication SPI.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.mail.GridMailCommunicationSpi">
                <property name="outHost" value="smtp.google.com"/>
                <property name="inHost" value="pop.google.com"/>
                <property name="fromAddress" value="grid@google.com"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for Mule 1.x communication SPI.

            NOTE: JARs for Mule should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.mule.GridMuleCommunicationSpi">
                <property name="configurationFile" value="config/mule1/mule.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for Mule 2.x communication SPI.

            NOTE: JARs for Mule should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.mule2.GridMuleCommunicationSpi">
                <property name="configurationFile" value="config/mule2/mule.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for Coherence communication SPI.

            NOTE: JARs for Coherence should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="communicationSpi">
            <bean class="org.gridgain.grid.spi.communication.coherence.GridCoherenceCommunicationSpi">
                <property name="acknowledgment" value="false"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment to provide custom configuration for URI deployment SPI.
        -->
        <!--
        <property name="deploymentSpi">
            <bean class="org.gridgain.grid.spi.deployment.uri.GridUriDeploymentSpi">
                <property name="temporaryDirectoryPath" value="/tmp/grid"/>
                <property name="uriList">
                    <list>
                        <value>http://www.site.com/tasks/task.gar</value>
                        <value>file:///home/user1/task.gar</value>
                    </list>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide Multicast discovery SPI with custom multicast group.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.multicast.GridMulticastDiscoverySpi">
                <property name="multicastGroup" value="228.10.10.157"/>
            </bean>
        </property>
         -->

        <!--
            Uncomment this to provide custom Jgroups multicast based discovery SPI with custom configuration.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.jgroups.GridJgroupsDiscoverySpi">
                <property name="configurationFile" value="config/jgroups/multicast/jgroups.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom Jgroups TCP based discovery SPI with custom configuration.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.jgroups.GridJgroupsDiscoverySpi">
                <property name="configurationFile" value="config/jgroups/tcp/jgroups.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom JBoss discovery SPI.

            NOTE: JARs for JBoss HA discovery should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
         <property name="discoverySpi">
             <bean class="org.gridgain.grid.spi.discovery.jboss.GridJbossDiscoverySpi"/>
         </property>
        -->

        <!--
            Uncomment this to provide custom JMS discovery SPI.

            NOTE: JARs for specific JMS provider should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.jms.GridJmsDiscoverySpi">
                <property name="connectionFactoryName" value="ConnectionFactory"/>
                <property name="topicName" value="topic/myjmstopic"/>
                <property name="jndiEnvironment">
                    <map>
                        <entry>
                            <key><util:constant static-field="javax.naming.Context.INITIAL_CONTEXT_FACTORY"/></key>
                            <value>org.jnp.interfaces.NamingContextFactory</value>
                        </entry>
                        <entry>
                            <key><util:constant static-field="javax.naming.Context.PROVIDER_URL"/></key>
                            <value>jnp://my.ip.address:1099</value>
                        </entry>
                        <entry>
                            <key><util:constant static-field="javax.naming.Context.URL_PKG_PREFIXES"/></key>
                            <value>org.jboss.naming:org.jnp.interfaces</value>
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom mail discovery SPI.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.mail.GridMailDiscoverySpi">
                <property name="outHost" value="smtp.google.com"/>
                <property name="inHost" value="pop.google.com"/>
                <property name="fromAddress" value="grid@google.com"/>
                <property name="broadcastAddress" value="grid-broadcast@google.com"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom Mule 1.x discovery SPI.

            NOTE: JARs for Mule should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.mule.GridMuleDiscoverySpi">
                <property name="configurationFile" value="config/mule1/mule.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom Mule 2.x discovery SPI.

            NOTE: JARs for Mule should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.mule2.GridMuleDiscoverySpi">
                <property name="configurationFile" value="config/mule2/mule.xml"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom Coherence discovery SPI.

            NOTE: JARs for Tangosol Coherence should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.coherence.GridCoherenceDiscoverySpi"/>
        </property>
        -->

        <!--
            Uncomment this to provide custom event storage SPI.
        -->
        <!--
        <property name="eventStorageSpi">
            <bean class="org.gridgain.grid.spi.eventstorage.memory.GridMemoryEventStorageSpi">
                <property name="expireCount" value="1000"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide Always Failover SPI.

            Note that Always Failover SPI is used be default, so there is no need
            to uncomment this section if you don't plan to change any default
            configuration properties.
        -->
        <!--
        <property name="failoverSpi">
            <bean class="org.gridgain.grid.spi.failover.always.GridAlwaysFailoverSpi">
                <property name="maximumFailoverAttempts" value="5"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to use Job Stealing Failover SPI.
        -->
        <!--
        <property name="failoverSpi">
            <bean class="org.gridgain.grid.spi.failover.jobstealing.GridJobStealingFailoverSpi">
                <property name="maximumFailoverAttempts" value="5"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide Never Failover SPI.
        -->
        <!--
        <property name="failoverSpi">
            <bean class="org.gridgain.grid.spi.failover.never.GridNeverFailoverSpi"/>
        </property>
        -->

        <!--
            Uncomment this to provide custom topology SPI.
        -->
        <!--
        <property name="topologySpi">
            <bean class="org.gridgain.grid.spi.topology.basic.GridBasicTopologySpi">
                <property name="localNode" value="false"/>
                <property name="remoteNodes" value="true"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom attributes topology SPI.
        -->
        <!--
        <property name="topologySpi">
            <bean class="org.gridgain.grid.spi.topology.attributes.GridAttributesTopologySpi">
               <property name="attributes">
                    <map>
                        <entry key="key1">
                            <value>value1</value>
                        </entry>
                        <entry key="key2">
                            <value>value2</value>
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom filter topology SPI.
        -->
        <!--
        <property name="topologySpi">
            <bean class="org.gridgain.grid.spi.topology.nodefilter.GridNodeFilterTopologySpi">
               <property name="filters">
                    <map>
                        <entry key="myTaskName">
                            <bean class="org.gridgain.grid.GridJexlNodeFilter">
                                <property name="expression" value="node.metrics.getAvailableProcessors() > 1"/>
                            </bean>
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide custom metrics SPI. Note that
            GridBasicMetricsSpi is used by default and requires no
            configuration, so basically there is no reason to uncomment
            it unless you plan to provide your own implementation.
        -->
        <!--
        <property name="metricsSpi">
            <bean class="org.gridgain.grid.spi.metrics.jdk.GridJdkRuntimeMetricsSpi"/>
        </property>
        -->

        <!--
            Uncomment this to provide custom tracing SPI.

            NOTE: JARs for JXinsight should be available on classpath.
            If you use gridgain.{sh|bat} script to start grid node than you only need
            to change setenv.{sh|bat} script in the same directory to add necessary
            JARs to GridGain class path.
        -->
        <!--
        <property name="tracingSpi">
            <bean class="org.gridgain.grid.spi.tracing.jxinsight.GridJxinsightTracingSpi"/>
        </property>
        -->
    </bean>
</beans>
